citation()
complete_network<-read.csv("Bartomeus_Ntw_nceas.txt",sep="\t")
complete_network$Insect_id <- paste("i",complete_network$Insect_id,sep="_")
complete_network$Plant_id <- paste("p",complete_network$Plant_id,sep="_")
nets<-list()
matchings<-list()
for(site in levels(complete_network$Site)){
subsetname<-subset(complete_network,Site==site)
ELname<-data.frame(plants=subsetname$Plant_id,insects=subsetname$Insect_id,weight=subsetname$Number_of_visits_per6min)
attr(nets,site)<-ELname
graphname<-graph.data.frame(ELname)
plant.count<-get.vertex.attribute(graphname,"name")
V(graphname)$type<-TRUE
V(graphname)$type[grep("p",plant.count)]<-FALSE
name<-paste0(site,"_TF")
match_results<-maximum.bipartite.matching(graphname)
attr(matchings,name)<-match_results
#rm(subsetname,ELname,graphname,plant.count,name)
}
setwd("~/GitHub/controlling-pollination-networks/data/Bartomeus-2008")
complete_network<-read.csv("Bartomeus_Ntw_nceas.txt",sep="\t")
complete_network$Insect_id <- paste("i",complete_network$Insect_id,sep="_")
complete_network$Plant_id <- paste("p",complete_network$Plant_id,sep="_")
nets<-list()
matchings<-list()
for(site in levels(complete_network$Site)){
subsetname<-subset(complete_network,Site==site)
ELname<-data.frame(plants=subsetname$Plant_id,insects=subsetname$Insect_id,weight=subsetname$Number_of_visits_per6min)
attr(nets,site)<-ELname
graphname<-graph.data.frame(ELname)
plant.count<-get.vertex.attribute(graphname,"name")
V(graphname)$type<-TRUE
V(graphname)$type[grep("p",plant.count)]<-FALSE
name<-paste0(site,"_TF")
match_results<-maximum.bipartite.matching(graphname)
attr(matchings,name)<-match_results
#rm(subsetname,ELname,graphname,plant.count,name)
}
require(igraph)
complete_network<-read.csv("Bartomeus_Ntw_nceas.txt",sep="\t")
complete_network$Insect_id <- paste("i",complete_network$Insect_id,sep="_")
complete_network$Plant_id <- paste("p",complete_network$Plant_id,sep="_")
nets<-list()
matchings<-list()
for(site in levels(complete_network$Site)){
subsetname<-subset(complete_network,Site==site)
ELname<-data.frame(plants=subsetname$Plant_id,insects=subsetname$Insect_id,weight=subsetname$Number_of_visits_per6min)
attr(nets,site)<-ELname
graphname<-graph.data.frame(ELname)
plant.count<-get.vertex.attribute(graphname,"name")
V(graphname)$type<-TRUE
V(graphname)$type[grep("p",plant.count)]<-FALSE
name<-paste0(site,"_TF")
match_results<-maximum.bipartite.matching(graphname)
attr(matchings,name)<-match_results
#rm(subsetname,ELname,graphname,plant.count,name)
}
#run max_matching_sites.R first
length(attr(nets,site)$weight)
choose(52,7)
sample_list<-list()
for(site in levels(complete_network$Site))
{
success<-1
samples<-list()
no_links<-attr(matchings,paste0(site,"_TF"))$matching_size
count<-0
for(i in 1:100000)
{ count<-count+1
s<-sample(1:length(attr(nets,site)$weight),no_links)
weight_sum<-sum(attr(nets,site)$weight[s])
if(weight_sum>=attr(matchings,site)$matching_weight)
{
sample_subset<-attr(nets,site)[s,]
sample_levels<-droplevels(sample_subset)
if(length(levels(sample_levels$plants))==attr(matchings,site)$matching_size)
{
if(length(levels(sample_levels$insects))==attr(matchings,site)$matching_size)
{
samples[[success]]<-sample_subset
success<-success+1
}
}
}
}
attr(sample_list,site)<-samples
}
rm(samples)
sample_list
attr(sample_list,"SEL1OP")[1]
attr(sample_list,"SEL1OP")[6553]
attr(sample_list,"SEL1OP")[[6553]]
attr(sample_list,)
attr(sample_list,"SEL1OP")
sample_list[[1]]
sample_list[1]
sample_list["SEL1OP"]
head(sample_list)
sample_list
attr(sample_list,site)
sample_subset
attr(sample_list,site)[1]
attr(sample_list,site)[[1]]
head(samples)
sample_list<-list()
for(site in levels(complete_network$Site))
{
success<-1
samples<-list()
no_links<-attr(matchings,paste0(site,"_TF"))$matching_size
count<-0
for(i in 1:100000)
{ count<-count+1
s<-sample(1:length(attr(nets,site)$weight),no_links)
weight_sum<-sum(attr(nets,site)$weight[s])
if(weight_sum>=attr(matchings,site)$matching_weight)
{
sample_subset<-attr(nets,site)[s,]
sample_levels<-droplevels(sample_subset)
if(length(levels(sample_levels$plants))==attr(matchings,site)$matching_size)
{
if(length(levels(sample_levels$insects))==attr(matchings,site)$matching_size)
{
samples[[success]]<-sample_subset
success<-success+1
break
}
}
}
}
attr(sample_list,site)<-samples
}
samples
sample_subset
site
?combn
